# Azure DevOps Pipeline for .NET Application Build and Deploy

trigger:
  branches:
    include:
    - main
    - develop
  paths:
    exclude:
    - bicep/*
    - parameters/*
    - README.md

variables:
  # Build Configuration
  buildConfiguration: 'Release'
  # .NET Version
  dotNetVersion: '8.x'
  # Azure Service Connection
  azureServiceConnection: 'azure-service-connection'
  # Web App Name (should match infrastructure deployment)
  webAppName: 'webapp-dotnet-$(Build.BuildId)'
  # Resource Group Name
  resourceGroupName: 'rg-dotnet-app-$(Build.BuildId)'
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build .NET Application'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET $(dotNetVersion)'
      inputs:
        packageType: 'sdk'
        version: $(dotNetVersion)
    
    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build application'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'
    
    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build --verbosity normal'
      continueOnError: true
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish application'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployApp
    displayName: 'Deploy to App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: $(azureServiceConnection)
              appType: 'webAppLinux'
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/*.zip'
              runtimeStack: 'DOTNETCORE|8.0'